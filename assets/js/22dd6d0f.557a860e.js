"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[670],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},s=Object.keys(e);for(o=0;o<s.length;o++)r=s[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)r=s[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var a=o.createContext({}),u=function(e){var t=o.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return o.createElement(a.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,a=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(r),m=n,h=d["".concat(a,".").concat(m)]||d[m]||c[m]||s;return r?o.createElement(h,l(l({ref:t},p),{},{components:r})):o.createElement(h,l({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,l=new Array(s);l[0]=d;var i={};for(var a in t)hasOwnProperty.call(t,a)&&(i[a]=t[a]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var u=2;u<s;u++)l[u]=r[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9322:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return a},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var o=r(7462),n=r(3366),s=(r(7294),r(3905)),l=["components"],i={sidebar_label:"Prometheus Walkthrough from Digital Ocean",sidebar_position:1},a=void 0,u={unversionedId:"website-monitoring/website-monitoring",id:"website-monitoring/website-monitoring",isDocsHomePage:!1,title:"website-monitoring",description:"Step 1 \u2014 Creating Service Users",source:"@site/docs/website-monitoring/website-monitoring.md",sourceDirName:"website-monitoring",slug:"/website-monitoring/website-monitoring",permalink:"/docs/website-monitoring/website-monitoring",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/website-monitoring/website-monitoring.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Prometheus Walkthrough from Digital Ocean",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Black Box Exporter",permalink:"/docs/website-monitoring/blackbox-exporter"},next:{title:"Prometheus Installer (Server Installer)",permalink:"/docs/website-monitoring/host-installer"}},p=[],c={toc:p};function d(e){var t=e.components,r=(0,n.Z)(e,l);return(0,s.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Step 1 \u2014 Creating Service Users"),(0,s.kt)("p",null,"For security purposes, we\u2019ll begin by creating two new user accounts, prometheus and node_exporter. We\u2019ll use these accounts throughout the tutorial to isolate the ownership on Prometheus\u2019 core files and directories."),(0,s.kt)("p",null,"Create these two users, and use the --no-create-home and --shell /bin/false options so that these users can\u2019t log into the server."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo useradd --no-create-home --shell /bin/false prometheus\nsudo useradd --no-create-home --shell /bin/false node_exporter\n")),(0,s.kt)("p",null,"Before we download the Prometheus binaries, create the necessary directories for storing Prometheus\u2019 files and data. Following standard Linux conventions, we\u2019ll create a directory in /etc for Prometheus\u2019 configuration files and a directory in /var/lib for its data."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo mkdir /etc/prometheus\nsudo mkdir /var/lib/prometheus\n")),(0,s.kt)("p",null,"Now, set the user and group ownership on the new directories to the prometheus user."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo chown prometheus:prometheus /etc/prometheus\nsudo chown prometheus:prometheus /var/lib/prometheus\n")),(0,s.kt)("p",null,"With our users and directories in place, we can now download Prometheus and then create the minimal configuration file to run Prometheus for the first time.\nStep 2 \u2014 Downloading Prometheus"),(0,s.kt)("p",null,"First, download and unpack the current stable version of Prometheus into your home directory. You can find the latest binaries along with their checksums on the Prometheus download page."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"cd ~\ncurl -LO https://github.com/prometheus/prometheus/releases/download/v2.0.0/prometheus-2.0.0.linux-amd64.tar.gz\n")),(0,s.kt)("p",null,"Next, use the sha256sum command to generate a checksum of the downloaded file:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sha256sum prometheus-2.0.0.linux-amd64.tar.gz\n")),(0,s.kt)("p",null,"Compare the output from this command with the checksum on the Prometheus download page to ensure that your file is both genuine and not corrupted."),(0,s.kt)("p",null,"Output\ne12917b25b32980daee0e9cf879d9ec197e2893924bd1574604eb0f550034d46  prometheus-2.0.0.linux-amd64.tar.gz"),(0,s.kt)("p",null,"If the checksums don\u2019t match, remove the downloaded file and repeat the preceding steps to re-download the file."),(0,s.kt)("p",null,"Now, unpack the downloaded archive."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"tar xvf prometheus-2.0.0.linux-amd64.tar.gz\n")),(0,s.kt)("p",null,"This will create a directory called prometheus-2.0.0.linux-amd64 containing two binary files (prometheus and promtool), consoles and console_libraries directories containing the web interface files, a license, a notice, and several example files."),(0,s.kt)("p",null,"Copy the two binaries to the /usr/local/bin directory."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo cp prometheus-2.0.0.linux-amd64/prometheus /usr/local/bin/\nsudo cp prometheus-2.0.0.linux-amd64/promtool /usr/local/bin/\n")),(0,s.kt)("p",null,"Set the user and group ownership on the binaries to the prometheus user created in Step 1."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo chown prometheus:prometheus /usr/local/bin/prometheus\nsudo chown prometheus:prometheus /usr/local/bin/promtool\n")),(0,s.kt)("p",null,"Copy the consoles and console_libraries directories to /etc/prometheus."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo cp -r prometheus-2.0.0.linux-amd64/consoles /etc/prometheus\nsudo cp -r prometheus-2.0.0.linux-amd64/console_libraries /etc/prometheus\n")),(0,s.kt)("p",null,"Set the user and group ownership on the directories to the prometheus user. Using the -R flag will ensure that ownership is set on the files inside the directory as well."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo chown -R prometheus:prometheus /etc/prometheus/consoles\nsudo chown -R prometheus:prometheus /etc/prometheus/console_libraries\n")),(0,s.kt)("p",null,"Lastly, remove the leftover files from your home directory as they are no longer needed."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"rm -rf prometheus-2.0.0.linux-amd64.tar.gz prometheus-2.0.0.linux-amd64\n")),(0,s.kt)("p",null,"Now that Prometheus is installed, we\u2019ll create its configuration and service files in preparation of its first run.\nStep 3 \u2014 Configuring Prometheus"),(0,s.kt)("p",null,"In the /etc/prometheus directory, use nano or your favorite text editor to create a configuration file named prometheus.yml. For now, this file will contain just enough information to run Prometheus for the first time."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo nano /etc/prometheus/prometheus.yml\n")),(0,s.kt)("p",null,"Warning: Prometheus\u2019 configuration file uses the YAML format, which strictly forbids tabs and requires two spaces for indentation. Prometheus will fail to start if the configuration file is incorrectly formatted."),(0,s.kt)("p",null,"In the global settings, define the default interval for scraping metrics. Note that Prometheus will apply these settings to every exporter unless an individual exporter\u2019s own settings override the globals.\nPrometheus config file part 1 - /etc/prometheus/prometheus.yml"),(0,s.kt)("p",null,"global:\nscrape_interval: 15s"),(0,s.kt)("p",null,"This scrape_interval value tells Prometheus to collect metrics from its exporters every 15 seconds, which is long enough for most exporters."),(0,s.kt)("p",null,"Now, add Prometheus itself to the list of exporters to scrape from with the following scrape_configs directive:\nPrometheus config file part 2 - /etc/prometheus/prometheus.yml"),(0,s.kt)("p",null,"...\nscrape_configs:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"job_name: 'prometheus'\nscrape_interval: 5s\nstatic_configs:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"targets: ","['localhost:9090']")))),(0,s.kt)("p",null,"Prometheus uses the job_name to label exporters in queries and on graphs, so be sure to pick something descriptive here."),(0,s.kt)("p",null,"And, as Prometheus exports important data about itself that you can use for monitoring performance and debugging, we\u2019ve overridden the global scrape_interval directive from 15 seconds to 5 seconds for more frequent updates."),(0,s.kt)("p",null,"Lastly, Prometheus uses the static_configs and targets directives to determine where exporters are running. Since this particular exporter is running on the same server as Prometheus itself, we can use localhost instead of an IP address along with the default port, 9090."),(0,s.kt)("p",null,"Your configuration file should now look like this:\nPrometheus config file - /etc/prometheus/prometheus.yml"),(0,s.kt)("p",null,"global:\nscrape_interval: 15s"),(0,s.kt)("p",null,"scrape_configs:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"job_name: 'prometheus'\nscrape_interval: 5s\nstatic_configs:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"targets: ","['localhost:9090']")))),(0,s.kt)("p",null,"Save the file and exit your text editor."),(0,s.kt)("p",null,"Now, set the user and group ownership on the configuration file to the prometheus user created in Step 1."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo chown prometheus:prometheus /etc/prometheus/prometheus.yml\n")),(0,s.kt)("p",null,"With the configuration complete, we\u2019re ready to test Prometheus by running it for the first time.\nStep 4 \u2014 Running Prometheus"),(0,s.kt)("p",null,"Start up Prometheus as the prometheus user, providing the path to both the configuration file and the data directory."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo -u prometheus /usr/local/bin/prometheus \\\n    --config.file /etc/prometheus/prometheus.yml \\\n    --storage.tsdb.path /var/lib/prometheus/ \\\n    --web.console.templates=/etc/prometheus/consoles \\\n    --web.console.libraries=/etc/prometheus/console_libraries\n")),(0,s.kt)("p",null,"The output contains information about Prometheus\u2019 loading progress, configuration file, and related services. It also confirms that Prometheus is listening on port 9090."),(0,s.kt)("p",null,'Output\nlevel=info ts=2017-11-17T18:37:27.474530094Z caller=main.go:215 msg="Starting Prometheus" version="(version=2.0.0, branch=HEAD, re\nvision=0a74f98628a0463dddc90528220c94de5032d1a0)"\nlevel=info ts=2017-11-17T18:37:27.474758404Z caller=main.go:216 build_context="(go=go1.9.2, user=root@615b82cb36b6, date=20171108-\n07:11:59)"\nlevel=info ts=2017-11-17T18:37:27.474883982Z caller=main.go:217 host_details="(Linux 4.4.0-98-generic #121-Ubuntu SMP Tue Oct 10 1\n4:24:03 UTC 2017 x86_64 prometheus-update (none))"\nlevel=info ts=2017-11-17T18:37:27.483661837Z caller=web.go:380 component=web msg="Start listening for connections" address=0.0.0.0\n:9090\nlevel=info ts=2017-11-17T18:37:27.489730138Z caller=main.go:314 msg="Starting TSDB"\nlevel=info ts=2017-11-17T18:37:27.516050288Z caller=targetmanager.go:71 component="target manager" msg="Starting target manager...\n"\nlevel=info ts=2017-11-17T18:37:27.537629169Z caller=main.go:326 msg="TSDB started"\nlevel=info ts=2017-11-17T18:37:27.537896721Z caller=main.go:394 msg="Loading configuration file" filename=/etc/prometheus/promethe\nus.yml\nlevel=info ts=2017-11-17T18:37:27.53890004Z caller=main.go:371 msg="Server is ready to receive requests."'),(0,s.kt)("p",null,"If you get an error message, double-check that you\u2019ve used YAML syntax in your configuration file and then follow the on-screen instructions to resolve the problem."),(0,s.kt)("p",null,"Now, halt Prometheus by pressing CTRL+C, and then open a new systemd service file."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo nano /etc/systemd/system/prometheus.service\n")),(0,s.kt)("p",null,"The service file tells systemd to run Prometheus as the prometheus user, with the configuration file located in the /etc/prometheus/prometheus.yml directory and to store its data in the /var/lib/prometheus directory. (The details of systemd service files are beyond the scope of this tutorial, but you can learn more at Understanding Systemd Units and Unit Files.)"),(0,s.kt)("p",null,"Copy the following content into the file:\nPrometheus service file - /etc/systemd/system/prometheus.service"),(0,s.kt)("p",null,"[Unit]","\nDescription=Prometheus\nWants=network-online.target\nAfter=network-online.target"),(0,s.kt)("p",null,"[Service]","\nUser=prometheus\nGroup=prometheus\nType=simple\nExecStart=/usr/local/bin/prometheus \\\n--config.file /etc/prometheus/prometheus.yml \\\n--storage.tsdb.path /var/lib/prometheus/ \\\n--web.console.templates=/etc/prometheus/consoles \\\n--web.console.libraries=/etc/prometheus/console_libraries"),(0,s.kt)("p",null,"[Install]","\nWantedBy=multi-user.target"),(0,s.kt)("p",null,"Finally, save the file and close your text editor."),(0,s.kt)("p",null,"To use the newly created service, reload systemd."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl daemon-reload\n")),(0,s.kt)("p",null,"You can now start Prometheus using the following command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl start prometheus\n")),(0,s.kt)("p",null,"To make sure Prometheus is running, check the service\u2019s status."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl status prometheus\n")),(0,s.kt)("p",null,"The output tells you Prometheus\u2019 status, main process identifier (PID), memory use, and more."),(0,s.kt)("p",null,"If the service\u2019s status isn\u2019t active, follow the on-screen instructions and re-trace the preceding steps to resolve the problem before continuing the tutorial."),(0,s.kt)("p",null,"Output\n\u25cf prometheus.service - Prometheus\nLoaded: loaded (/etc/systemd/system/prometheus.service; disabled; vendor preset: enabled)\nActive: active (running) since Fri 2017-07-21 11:40:40 UTC; 3s ago\nMain PID: 2104 (prometheus)\nTasks: 7\nMemory: 13.8M\nCPU: 470ms\nCGroup: /system.slice/prometheus.service\n..."),(0,s.kt)("p",null,"When you\u2019re ready to move on, press Q to quit the status command."),(0,s.kt)("p",null,"Lastly, enable the service to start on boot."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl enable prometheus\n")),(0,s.kt)("p",null,"Now that Prometheus is up and running, we can install an additional exporter to generate metrics about our server\u2019s resources.\nStep 5 \u2014 Downloading Node Exporter"),(0,s.kt)("p",null,"To expand Prometheus beyond metrics about itself only, we\u2019ll install an additional exporter called Node Exporter. Node Exporter provides detailed information about the system, including CPU, disk, and memory usage."),(0,s.kt)("p",null,"First, download the current stable version of Node Exporter into your home directory. You can find the latest binaries along with their checksums on Prometheus\u2019 download page."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"cd ~\ncurl -LO https://github.com/prometheus/node_exporter/releases/download/v0.15.1/node_exporter-0.15.1.linux-amd64.tar.gz\n")),(0,s.kt)("p",null,"Use the sha256sum command to generate a checksum of the downloaded file:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sha256sum node_exporter-0.15.1.linux-amd64.tar.gz\n")),(0,s.kt)("p",null,"Verify the downloaded file\u2019s integrity by comparing its checksum with the one on the download page."),(0,s.kt)("p",null,"Output\n7ffb3773abb71dd2b2119c5f6a7a0dbca0cff34b24b2ced9e01d9897df61a127  node_exporter-0.15.1.linux-amd64.tar.gz"),(0,s.kt)("p",null,"If the checksums don\u2019t match, remove the downloaded file and repeat the preceding steps."),(0,s.kt)("p",null,"Now, unpack the downloaded archive."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"tar xvf node_exporter-0.15.1.linux-amd64.tar.gz\n")),(0,s.kt)("p",null,"This will create a directory called node_exporter-0.15.1.linux-amd64 containing a binary file named node_exporter, a license, and a notice."),(0,s.kt)("p",null,"Copy the binary to the /usr/local/bin directory and set the user and group ownership to the node_exporter user that you created in Step 1."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo cp node_exporter-0.15.1.linux-amd64/node_exporter /usr/local/bin\nsudo chown node_exporter:node_exporter /usr/local/bin/node_exporter\n")),(0,s.kt)("p",null,"Lastly, remove the leftover files from your home directory as they are no longer needed."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"rm -rf node_exporter-0.15.1.linux-amd64.tar.gz node_exporter-0.15.1.linux-amd64\n")),(0,s.kt)("p",null,"Now that you\u2019ve installed Node Exporter, let\u2019s test it out by running it before creating a service file for it so that it starts on boot.\nStep 6 \u2014 Running Node Exporter"),(0,s.kt)("p",null,"The steps for running Node Exporter are similar to those for running Prometheus itself. Start by creating the Systemd service file for Node Exporter."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo nano /etc/systemd/system/node_exporter.service\n")),(0,s.kt)("p",null,"This service file tells your system to run Node Exporter as the node_exporter user with the default set of collectors enabled."),(0,s.kt)("p",null,"Copy the following content into the service file:\nNode Exporter service file - /etc/systemd/system/node_exporter.service"),(0,s.kt)("p",null,"[Unit]","\nDescription=Node Exporter\nWants=network-online.target\nAfter=network-online.target"),(0,s.kt)("p",null,"[Service]","\nUser=node_exporter\nGroup=node_exporter\nType=simple\nExecStart=/usr/local/bin/node_exporter"),(0,s.kt)("p",null,"[Install]","\nWantedBy=multi-user.target"),(0,s.kt)("p",null,"Collectors define which metrics Node Exporter will generate. You can see Node Exporter\u2019s complete list of collectors \u2014 including which are enabled by default and which are deprecated \u2014 in the Node Exporter README file."),(0,s.kt)("p",null,"If you ever need to override the default list of collectors, you can use the --collectors.enabled flag, like:\nNode Exporter service file part - /etc/systemd/system/node_exporter.service"),(0,s.kt)("p",null,"...\nExecStart=/usr/local/bin/node_exporter --collectors.enabled meminfo,loadavg,filesystem\n..."),(0,s.kt)("p",null,"The preceding example would tell Node Exporter to generate metrics using only the meminfo, loadavg, and filesystem collectors. You can limit the collectors to however few or many you need, but note that there are no blank spaces before or after the commas."),(0,s.kt)("p",null,"Save the file and close your text editor."),(0,s.kt)("p",null,"Finally, reload systemd to use the newly created service."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl daemon-reload\n")),(0,s.kt)("p",null,"You can now run Node Exporter using the following command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl start node_exporter\n")),(0,s.kt)("p",null,"Verify that Node Exporter\u2019s running correctly with the status command."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl status node_exporter\n")),(0,s.kt)("p",null,"Like before, this output tells you Node Exporter\u2019s status, main process identifier (PID), memory usage, and more."),(0,s.kt)("p",null,"If the service\u2019s status isn\u2019t active, follow the on-screen messages and re-trace the preceding steps to resolve the problem before continuing."),(0,s.kt)("p",null,"Output\n\u25cf node_exporter.service - Node Exporter\nLoaded: loaded (/etc/systemd/system/node_exporter.service; disabled; vendor preset: enabled)\nActive: active (running) since Fri 2017-07-21 11:44:46 UTC; 5s ago\nMain PID: 2161 (node_exporter)\nTasks: 3\nMemory: 1.4M\nCPU: 11ms\nCGroup: /system.slice/node_exporter.service"),(0,s.kt)("p",null,"Lastly, enable Node Exporter to start on boot."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl enable node_exporter\n")),(0,s.kt)("p",null,"With Node Exporter fully configured and running as expected, we\u2019ll tell Prometheus to start scraping the new metrics.\nStep 7 \u2014 Configuring Prometheus to Scrape Node Exporter"),(0,s.kt)("p",null,"Because Prometheus only scrapes exporters which are defined in the scrape_configs portion of its configuration file, we\u2019ll need to add an entry for Node Exporter, just like we did for Prometheus itself."),(0,s.kt)("p",null,"Open the configuration file."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo nano /etc/prometheus/prometheus.yml\n")),(0,s.kt)("p",null,"At the end of the scrape_configs block, add a new entry called node_exporter.\nPrometheus config file part 1 - /etc/prometheus/prometheus.yml"),(0,s.kt)("p",null,"..."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"job_name: 'node_exporter'\nscrape_interval: 5s\nstatic_configs:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"targets: ","['localhost:9100']")))),(0,s.kt)("p",null,"Because this exporter is also running on the same server as Prometheus itself, we can use localhost instead of an IP address again along with Node Exporter\u2019s default port, 9100."),(0,s.kt)("p",null,"Your whole configuration file should look like this:\nPrometheus config file - /etc/prometheus/prometheus.yml"),(0,s.kt)("p",null,"global:\nscrape_interval: 15s"),(0,s.kt)("p",null,"scrape_configs:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"job_name: 'prometheus'\nscrape_interval: 5s\nstatic_configs:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"targets: ","['localhost:9090']"))),(0,s.kt)("li",{parentName:"ul"},"job_name: 'node_exporter'\nscrape_interval: 5s\nstatic_configs:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"targets: ","['localhost:9100']")))),(0,s.kt)("p",null,"Save the file and exit your text editor when you\u2019re ready to continue."),(0,s.kt)("p",null,"Finally, restart Prometheus to put the changes into effect."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl restart prometheus\n")),(0,s.kt)("p",null,"Once again, verify that everything is running correctly with the status command."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl status prometheus\n")),(0,s.kt)("p",null,"If the service\u2019s status isn\u2019t set to active, follow the on screen instructions and re-trace your previous steps before moving on."),(0,s.kt)("p",null,"Output\n\u25cf prometheus.service - Prometheus\nLoaded: loaded (/etc/systemd/system/prometheus.service; disabled; vendor preset: enabled)\nActive: active (running) since Fri 2017-07-21 11:46:39 UTC; 6s ago\nMain PID: 2219 (prometheus)\nTasks: 6\nMemory: 19.9M\nCPU: 433ms\nCGroup: /system.slice/prometheus.service"),(0,s.kt)("p",null,"We now have Prometheus and Node Exporter installed, configured, and running. As a final precaution before connecting to the web interface, we\u2019ll enhance our installation\u2019s security with basic HTTP authentication to ensure that unauthorized users can\u2019t access our metrics."))}d.isMDXComponent=!0}}]);