"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[143],{6980:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return m}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_label:"NGROK Start On Boot",sidebar_position:1},l="Booting NGROK SSH On Boot",d={unversionedId:"Ngrok-Start-On-Boot/localStorage",id:"Ngrok-Start-On-Boot/localStorage",isDocsHomePage:!1,title:"Booting NGROK SSH On Boot",description:"Start by making an NGROK directory in /opt",source:"@site/docs/Ngrok-Start-On-Boot/localStorage.md",sourceDirName:"Ngrok-Start-On-Boot",slug:"/Ngrok-Start-On-Boot/localStorage",permalink:"/big-documentation/docs/Ngrok-Start-On-Boot/localStorage",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Ngrok-Start-On-Boot/localStorage.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"NGROK Start On Boot",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"EC2-Server Setup",permalink:"/big-documentation/docs/AWS-EC2/EC2-Server"},next:{title:"localStorage (For Headless CMS)",permalink:"/big-documentation/docs/brightsign/localStorage"}},c=[{value:"Start by making an NGROK directory in /opt",id:"start-by-making-an-ngrok-directory-in-opt",children:[]},{value:"Move NGROK and ngrok.yml into that folder",id:"move-ngrok-and-ngrokyml-into-that-folder",children:[]},{value:"For remote SSH specifically add this to the ngrok.yml",id:"for-remote-ssh-specifically-add-this-to-the-ngrokyml",children:[]},{value:"Make a systemd service",id:"make-a-systemd-service",children:[]},{value:"Enable, start and check status",id:"enable-start-and-check-status",children:[]}],k={toc:c};function m(t){var e=t.components,n=(0,r.Z)(t,i);return(0,a.kt)("wrapper",(0,o.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"booting-ngrok-ssh-on-boot"},"Booting NGROK SSH On Boot"),(0,a.kt)("h2",{id:"start-by-making-an-ngrok-directory-in-opt"},"Start by making an NGROK directory in /opt"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo mkdir /opt/ngrok/\n")),(0,a.kt)("h2",{id:"move-ngrok-and-ngrokyml-into-that-folder"},"Move NGROK and ngrok.yml into that folder"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo mv ngrok /opt/ngrok\nsudo cp ~/.ngrok2/ngrok.yml /opt/ngrok\n")),(0,a.kt)("h2",{id:"for-remote-ssh-specifically-add-this-to-the-ngrokyml"},"For remote SSH specifically add this to the ngrok.yml"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'authtoken: NEW-AUTH-TOKEN-GOES-HERE\n\ntunnels:\n  arbitrary_tunnel_name:\n    proto: tcp\n    remote_addr: 3.tcp.ngrok.io:24288\n    # example forwarding to SSH, you may want to change the port number\n    addr: 22\n\n    # -------------------------\n    # Additional options\n    # -------------------------\n    # auth: "username:password"\n    # host_header: rewrite\n    # inspect: true\n    # bind_tls: true\n')),(0,a.kt)("h2",{id:"make-a-systemd-service"},"Make a systemd service"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo nano /etc/systemd/system/ngrok.service\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[Unit]\nDescription=ngrok\nAfter=network.target\n\n[Service]\nExecStart=/opt/ngrok/ngrok start --all --config /opt/ngrok/ngrok.yml\nExecReload=/bin/kill -HUP $MAINPID\nKillMode=process\nIgnoreSIGPIPE=true\nRestart=always\nRestartSec=3\nType=simple\n\n[Install]\nWantedBy=multi-user.target\n")),(0,a.kt)("h2",{id:"enable-start-and-check-status"},"Enable, start and check status"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"systemctl enable ngrok.service\nsystemctl start ngrok.service\nsystemctl status ngrok.service\n")))}m.isMDXComponent=!0}}]);