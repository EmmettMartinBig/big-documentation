"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[640],{4943:function(e,o,n){n.r(o),n.d(o,{frontMatter:function(){return u},contentTitle:function(){return h},metadata:function(){return i},toc:function(){return l},default:function(){return a}});var t=n(7462),s=n(3366),r=(n(7294),n(3905)),c=["components"],u={sidebar_label:"Ubuntu Prometheus Installer (Server Installer)",sidebar_position:2},h=void 0,i={unversionedId:"website-monitoring/host-installer",id:"website-monitoring/host-installer",isDocsHomePage:!1,title:"host-installer",description:"Ubuntu Prometheus Install",source:"@site/docs/website-monitoring/host-installer.md",sourceDirName:"website-monitoring",slug:"/website-monitoring/host-installer",permalink:"/big-documentation/docs/website-monitoring/host-installer",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/website-monitoring/host-installer.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Ubuntu Prometheus Installer (Server Installer)",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Black Box Exporter",permalink:"/big-documentation/docs/website-monitoring/blackbox-exporter"},next:{title:"Windows Prometheus Installer (Server Installer)",permalink:"/big-documentation/docs/website-monitoring/windows-prometheus"}},l=[{value:"Ubuntu Prometheus Install",id:"ubuntu-prometheus-install",children:[]},{value:"OPTIONAL STEP SSL (VERY RECOMMENED THOUGH)",id:"optional-step-ssl-very-recommened-though",children:[]}],p={toc:l};function a(e){var o=e.components,n=(0,s.Z)(e,c);return(0,r.kt)("wrapper",(0,t.Z)({},p,n,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"ubuntu-prometheus-install"},"Ubuntu Prometheus Install"),(0,r.kt)("p",null,"Step 1: Log into desired server you wish to monitor"),(0,r.kt)("p",null,"Step 2 : Copy code snippit, and on server:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"vi prom.sh\n")),(0,r.kt)("p",null,"Step 3: Paste from code snippit\nThen:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'#!/bin/sh\necho "Creating Users for Prometheus"\n\necho\nsudo useradd --no-create-home --shell /bin/false prometheus\nsudo useradd --no-create-home --shell /bin/false node_exporter\necho\n\necho "Creating new folders for Prometheus and Node Exporter in /etc/ and /var/lib"\necho\nsudo mkdir /etc/prometheus\nsudo mkdir /var/lib/prometheus\nsudo chown -R prometheus:prometheus /var/lib/prometheus/\necho\n\necho "Set ownership for prometheus"\nsudo chown -R prometheus:prometheus /etc/prometheus/\n\n\necho "Downloading Prometheus"\necho\ncd ~\ncurl -LO https://github.com/prometheus/prometheus/releases/download/v2.29.1/prometheus-2.29.1.linux-amd64.tar.gz\necho\n\necho "Unpacking Prometheus"\necho\nsudo tar xvf prometheus-*.tar.gz\necho\n\necho "Copy binaries to /usr/local/bin"\necho\nsudo cp prometheus-*/prometheus /usr/local/bin/\nsudo cp prometheus-*/promtool /usr/local/bin/\necho\n\necho "Set ownership to the user and group in step 1"\necho\nsudo chown prometheus:prometheus /usr/local/bin/prometheus\nsudo chown prometheus:prometheus /usr/local/bin/promtool\necho\n\necho "Copy consoles and console_libraries to /etc/prometheus"\necho\nsudo cp -r prometheus-*/consoles /etc/prometheus\nsudo cp -r prometheus-*/console_libraries /etc/prometheus\necho\n\necho "Set the user and group ownership on the directories to the prometheus user. Using the -R flag will ensure that ownership is set on the files inside the directory as well."\necho\nsudo chown -R prometheus:prometheus /etc/prometheus/consoles\nsudo chown -R prometheus:prometheus /etc/prometheus/console_libraries\necho\n\necho "Removing leftover Files"\necho\nsudo rm -rf prometheus-*.tar.gz prometheus-*.linux-amd64\necho\n\necho "Configuring prometheus.yml"\necho\nsudo echo \'global:\n  scrape_interval: 15s\n\nscrape_configs:\n  - job_name: \'prometheus\'\n    scrape_interval: 5s\n    static_configs:\n      - targets: [\'localhost:9090\']\n  - job_name: \'node_exporter\'\n    scrape_interval: 5s\n    static_configs:\n      - targets: [\'localhost:9100\']\' > /etc/prometheus/prometheus.yml\necho\n\necho "Setting ownership of prometheus.yml to user prometheus"\nsudo chown prometheus:prometheus /etc/prometheus/prometheus.yml\necho\n\necho "Making the prometheus service"\nsudo touch /etc/systemd/system/prometheus.service\necho\n\necho "Appending properies to the service"\nsudo echo \'[Unit]\nDescription=Prometheus\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nUser=prometheus\nGroup=prometheus\nType=simple\nExecStart=/usr/local/bin/prometheus \\\n    --config.file /etc/prometheus/prometheus.yml \\\n    --storage.tsdb.path /var/lib/prometheus/ \\\n    --web.console.templates=/etc/prometheus/consoles \\\n    --web.console.libraries=/etc/prometheus/console_libraries\n\n[Install]\nWantedBy=multi-user.target\' > /etc/systemd/system/prometheus.service\necho\n\necho "To use the new service, reload systemd"\nsudo systemctl daemon-reload\necho\n\necho "We enable the service so that it will be loaded automatically during boot"\nsudo systemctl enable prometheus\necho\n\necho "Start Prometheus on boot"\nsudo systemctl start prometheus\necho\n\necho "SECOND HALF - INSTALLING AND CONFIG OF NODE EXPORTER"\necho\n\necho "Download Node Exporter"\necho\ncd ~\ncurl -LO https://github.com/prometheus/node_exporter/releases/download/v1.2.2/node_exporter-1.2.2.linux-amd64.tar.gz\necho\n\necho "Unpacking NE"\necho\nsudo tar xvf node_exporter-*.tar.gz\necho\n\necho " copying to /usr/local/bin"\nsudo cp node_exporter-*/node_exporter /usr/local/bin\nsudo chown node_exporter:node_exporter /usr/local/bin/node_exporter\necho\n\necho "Removing leftovers"\nsudo rm -rf node_exporter-*.tar.gz node_exporter-*.linux-amd64\necho\n\n\necho " Running the exporter service"\nsudo echo \'\n[Unit]\nDescription=Node Exporter\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nUser=node_exporter\nGroup=node_exporter\nType=simple\nExecStart=/usr/local/bin/node_exporter\n\n[Install]\nWantedBy=multi-user.target\' > /etc/systemd/system/node_exporter.service\necho\n\necho "Reload systemd"\necho\nsudo systemctl daemon-reload\necho\n\necho "Starting NE"\nsudo systemctl start node_exporter\necho\n\necho "Checking Status"\necho\nsudo systemctl status node_exporter\necho\n\necho "Enable NE to start on boot"\necho\nsudo systemctl enable node_exporter\necho\n\necho "Restart Prometheus"\nsudo systemctl restart prometheus\necho\n\necho "Status check of Prometheus"\nsudo systemctl status prometheus\necho\n')),(0,r.kt)("p",null,"To start the install:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo bash ./prom.sh\n")),(0,r.kt)("h2",{id:"optional-step-ssl-very-recommened-though"},"OPTIONAL STEP SSL (VERY RECOMMENED THOUGH)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo su\n")),(0,r.kt)("p",null,"Step 4\nCreate new file called ssl-prom.sh"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"#!/bin/sh\nsudo su\n\nsudo touch /etc/prometheus/web.yml\n\nsudo echo '\ntls_server_config:\n  cert_file: /etc/prometheus/fullchain.pem\n  key_file: /etc/prometheus/privkey.pem\n  ' > /etc/prometheus/web.yml\n\n\ncd /etc/letsencrypt/live/*/\ncp fullchain.pem /etc/prometheus/\ncp fullchain.pem /etc/prometheus/\n")))}a.isMDXComponent=!0}}]);